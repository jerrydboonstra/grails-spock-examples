#summary Overview of all examples.

= Introduction =
This project contains examples how to test a grails example with Spock.

Here's the current setup:

== Domain classes ==
  * [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/grails-app/domain/grails/geb/spock/Author.groovy Author]: Consists of a firstname, a lastname and a list of books
  * [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/grails-app/domain/grails/geb/spock/Book.groovy Book]: Consists of a title and an author

== Services ==

  * [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/grails-app/services/grails/geb/spock/GuttenbergService.groovy GuttenbergService]: Contains a method to create a dummy book (Mr. [http://en.wikipedia.org/wiki/Karl-Theodor_zu_Guttenberg#Doctorate_plagiarism Guttenberg] is a german politican)


= Mocked unit tests =
Examples how to test your code with mocks and Spock

== Unit tests for domain classes ==

=== Testing dynamic finders ===
e.g. test if you can find an author by it's firstname and lastname after creating a new instance

{{{
def "find author by firstname and lastname"() {
          setup:
          mockDomain(Author)

          when:
          new Author(firstname: firstname,lastname:lastname).save()

          then:
          Author.findByFirstnameAndLastname(firstname,lastname) != null

          where:
          firstname = "John"
          lastname = "Doe"
   }
}}}

Find more examples here:

  * [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/test/unit/grails/geb/spock/domain/AuthorSpec.groovy AuthorSpec]
  * [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/test/unit/grails/geb/spock/domain/BookSpec.groovy BookSpec]


=== Testing constraints ===
e.g. test if it possible to create a new author with a firstname with more than 20 characters

{{{
def "firstname not longer than 20 characters"() {
          setup:
          mockForConstraintsTests(Author)

          when:
          def author =new Author(firstname: firstname,lastname:lastname)
          author.validate()

          then:
          author.hasErrors()

          where:
          firstname = "123456789012345678901"
          lastname = "Doe"
   }
}}}

Find more examples here:

  * [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/test/unit/grails/geb/spock/domain/AuthorSpec.groovy AuthorSpec]
  * [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/test/unit/grails/geb/spock/domain/BookSpec.groovy BookSpec]


==Testing services == 
Example:

{{{
def "when creating a new thesis author is assigned to thesis"() {
    //2. Setup mocks
    setup:
    //Enable logging for GuttenbergService
    mockLogging(GuttenbergService, true)
    //Create GuttenbergServce
    def guttenbergService = new GuttenbergService()
    //Use the author object created in the "where" statement to create mocked domain objects.
    //In this step, the author instance get's the ID assigned
    mockDomain(Author, [authorInstance])
    //Mock domain class book (required by the guttenberg service)
    mockDomain(Book)

    //3. Call the method to test
    when:
    def thesis = guttenbergService.createThesis(authorInstance.id)

    then:
    //4. Make asserts on the result
    thesis != null
    thesis.author.id == authorInstance.id

    //1. Create a dummy author instance used for the test. This instance has NO id yet
    where:
    authorInstance = new Author(firstname: "John", lastname: "Doe")
  }
}}}

Find more examples here:
  * [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/test/unit/grails/geb/spock/service/GuttenbergServiceSpec.groovy GuttenbergServiceSpec]


== Testing controllers ==
The controller under test in the following examples was created by using the {{{grails generate-controller}}} command for the domain class [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/grails-app/domain/grails/geb/spock/Author.groovy Author]

You can find all unit tests for the [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/grails-app/controllers/grails/geb/spock/AuthorController.groovy AuthorController] here: [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/test/unit/grails/geb/spock/AuthorControllerSpec.groovy AuthorControllerSpec]

=== Testing redirect ===

Example:
{{{
def 'index action'() {
    setup:
    mockLogging(AuthorController, true)

    when:
    controller.index()

    then:
    redirectArgs.action == "list"
  }
}}}

=== Testing paging ===

{{{
def 'list action: 2 authors and max = 1'() {
    setup:
    mockLogging(AuthorController, true)
    mockDomain(Author, [fistAuthorInstance, secondAuthorInstance])
    controller.params.max = 1

    expect:
    controller.list() == [authorInstanceList: [fistAuthorInstance], authorInstanceTotal: 2]

    where:
    fistAuthorInstance = new Author(firstname: "John1", lastname: "Doe1")
    secondAuthorInstance = new Author(firstname: "John2", lastname: "Doe2")
  }
}}}

=== Testing page with params copied to the model ===

{{{
  setup:
    mockLogging(AuthorController, true)
    mockDomain(Author)
    controller.params.firstname = firstname
    controller.params.lastname = lastname

    when:
    def model = controller.create()

    then:
    model.authorInstance != null
    model.authorInstance.firstname == firstname
    model.authorInstance.lastname == lastname

    where:
    firstname = "John"
    lastname = "Doe"
  }
}}}

=== Testing save action with a valid domain object ===

{{{
def 'save action: valid author'() {
    setup:
    mockLogging(AuthorController, true)
    mockDomain(Author)
    mockI18N(AuthorController)
    controller.params.firstname = "John"
    controller.params.lastname = "Doe"

    when:
    controller.save()

    then:
    redirectArgs.action == "show"
    controller.flash.message != null

  }
}}}

=== Testing a save action with an invalid object ===

{{{
def 'save action: invalid author'() {
    setup:
    mockLogging(AuthorController, true)
    mockDomain(Author)
    mockForConstraintsTests(Author)
    mockI18N(AuthorController)
    controller.params.firstname = firstname
    controller.params.lastname = lastname

    when:
    controller.save()

    then:
    renderArgs.view == "create"
    renderArgs.model.authorInstance.firstname == firstname
    renderArgs.model.authorInstance.lastname == lastname

    where:
    firstname = "John"
    lastname = ""

  }
}}}

=== Testing optimistic locking on update action ===

{{{
def 'update action: optimistic locking'() {
    setup:
    mockDomain(Author, [authorInstance])
    mockLogging(AuthorController, true)
    mockI18N(AuthorController)
    controller.params.firstname = "John changed"
    controller.params.lastname = "Doe changed"
    //Decrease version of edited object to enforce optimistic locking validation
    controller.params.version = (currentVersionInDB -1)
    controller.params.id = authorInstance.id

    when:
    controller.update()

    then:
    renderArgs.view == "edit"
    renderArgs.model.authorInstance == authorInstance
    renderArgs.model.authorInstance.hasErrors()

    where:
    currentVersionInDB = 2
    authorInstance = new Author(firstname: "John", lastname: "Doe", version: currentVersionInDB)
  }
}}}

= Integration tests = 

== Testing services ==
Take a look at the [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/grails-app/conf/BootStrap.groovy BootStrap] what objects are created in the DB before the the integration tests are started


Example for an integration test with Spock:

{{{

class GuttenbergServiceIntegrationSpec extends IntegrationSpec {

  def guttenbergService

  def "Create thesis for first author in DB"() {

    when:
    def thesis = guttenbergService.createThesis(authorId)

    then:
    thesis != null
    Book.countByAuthor(author) == 2

    where:
    authorId = 1L
    author = Author.get(authorId)
  }
}

}}}

Find more examples here:
  * [https://code.google.com/p/grails-spock-examples/source/browse/trunk/grails-geb-spock/test/integration/grails/geb/spock/GuttenbergServiceIntegrationSpec.groovy GuttenbergServiceIntegrationSpec]